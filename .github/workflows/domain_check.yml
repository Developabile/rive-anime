name: Check Domain Status

on:
  workflow_dispatch:
  schedule:
    - cron: "0 12 * * 0"

jobs:
  check_domains:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "14"

      - name: Install dependencies
        run: npm install axios

      - name: Create checkDomains.js
        run: |
          echo "const fs = require('fs');
          const axios = require('axios');

          const filePath = 'Domains.md';
          const fileContent = fs.readFileSync(filePath, 'utf8');

          const parseTable = (markdown) => {
            const rows = markdown.split('\n').filter(row => row.startsWith('|'));
            return rows.slice(2).map(row => {
              const cells = row.split('|').map(cell => cell.trim());
              return { Domain: cells[1], Status: cells[2] };
            });
          };

          const generateTable = (rows) => {
            const header = '| Domain | Status |\n| ------ | ------ |\n';
            const body = rows.map(row => `| ${row.Domain} | ${row.Status} |`).join('\n');
            return header + body + '\n';
          };

          const table = parseTable(fileContent);

          async function checkDomainStatus() {
            for (const row of table) {
              try {
                const response = await axios.get(row.Domain);
                row.Status = response.status === 200 ? '✅' : '❌';
              } catch (error) {
                row.Status = '❌';
              }
            }

            const updatedTable = generateTable(table);
            const newFileContent = fileContent.replace(
              /\| Domain \| Status \|\n\| ------ \| ------ \|\n[\s\S]*?\n(?=\*\*Legends\*\*)/,
              updatedTable
            );
            fs.writeFileSync(filePath, newFileContent);
          }

          checkDomainStatus();" > checkDomains.js

      - name: Run domain check script
        run: node checkDomains.js

      - name: Commit and push changes
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add Domains.md
          git commit -m 'Update domain status for $(date -d 'today' +\%m_%d_%Y)'
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
